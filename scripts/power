#! /usr/bin/env bash

#
# Logout and shutdown.
#
# Manage logout and shutdown of the current session
#
# Author:     Riccardo Finotello
# E-mail:     riccardo.finotello@gmail.com
#
# Copyright:  2020 - Riccardo Finotello
# License:    MIT License
#

# ------------------------------------
# OPTIONS, HELP, USAGE AND CHECKS
# ------------------------------------

# Show usage
function show_usage() {
    USAGE="$(basename $0) [-h] [-l|-o|-s|-r|-p] [-m]"
    printf "\n%s\n%s\n" "Usage:" "    $USAGE"
}

# Show help
function show_help() {
    show_usage

    printf "\n%s\n\n" "Logout and shutdown"
    printf "%s\n" "OPTIONS:"
    printf "%s\n" "    -h         Show this help and exit"
    printf "%s\n" "    -l         Lock the current session"
    printf "%s\n" "    -o         Logout user"
    printf "%s\n" "    -s         Enter standby mode"
    printf "%s\n" "    -r         Reboot the system"
    printf "%s\n" "    -p         Poweroff the system"
    printf "%s\n" "    -m         Show selection menu"

    printf "\n%s\n%s\n\n" \
           "For bug report and info: riccardo.finotello@gmail.com" \
           "Copyright (c) 2020 - Riccardo Finotello - MIT License"
}

# Check if systemctl is installed
[[ -x $(which systemctl) ]] || exit 1

# Check if X11 menu is installed
[[ -x $(which dmenu) ]] || exit 1

# Check if i3lock is installed
[[ -x $(which i3lock) ]] || exit 1
[[ -x $(which i3-msg) ]] || exit 1

# Check if the notifications can be muted and turned on
[[ -x $(which dnotification) ]] || exit 1

# Lock the system
function lock_session() {
    dnotification -S

    [[ -f $XDG_CONFIG_HOME/i3/lock-screen.png ]] \
        && i3lock -i $XDG_CONFIG_HOME/i3/lock-screen.png -n \
        || i3lock -n

    dnotification -s
}

# Enter standby mode
function standby_mode() {
    dnotification -S

    [[ -f $XDG_CONFIG_HOME/i3/lock-screen.png ]] \
        && i3lock -i $XDG_CONFIG_HOME/i3/lock-screen.png \
        || i3lock

    systemctl suspend

    dnotification -s
}

# Parse options
while getopts ":hlosrpm" opt; do
    case $opt in
      h)
          show_help
          exit 0
          ;;
      l)
          lock_session
          exit 0
          ;;
      o)
          i3-msg exit
          exit 0
          ;;
      s)
          standby_mode
          exit 0
          ;;
      r)
          systemctl reboot
          exit 0
          ;;
      p)
          systemctl poweroff
          exit 0
          ;;
      m)
          CHOICE=$(echo -e "Lock\nExit\nStandby\nReboot\nShutdown"| \
                   dmenu -i -l 5 -p "Poweroff menu: ")

          case $CHOICE in
              Lock)
                  lock_session
                  exit 0
                  ;;
              Exit)
                  i3-msg exit
                  exit 0
                  ;;
              Standby)
                  standby_mode
                  exit 0
                  ;;
              Reboot)
                  systemctl reboot
                  exit 0
                  ;;
              Shutdown)
                  systemctl poweroff
                  exit 0
                  ;;
              *)
                  printf "%s\n" "Invalid choice!"
                  ;;
          esac
          ;;
      \?)
          printf "%s\n" "Invalid option: -$OPTARG." >&2
          show_usage
          exit 1
          ;;
      :)
          printf "%s\n" "-$OPTARG requires an argument." >&2
          show_usage
          exit 1
          ;;
    esac
done

# ------------------------------------
# COMMANDS AND INFO
# ------------------------------------
[[ -z $* ]] && (show_help && exit 1)

# vim: ft=sh
